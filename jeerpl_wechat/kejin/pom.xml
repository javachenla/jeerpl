<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>cn.jbolt</groupId>
  <artifactId>kejin</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
   
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
    <jdk.version>1.8</jdk.version>
    <junit.version>3.8.1</junit.version>
    <jfinal.version>3.6</jfinal.version>
    <cos.version>2017.5</cos.version>
    <apachelog4j.version>2.11.1</apachelog4j.version>
    <log4j.version>1.2.17</log4j.version>
    <jettymavenplugin_version>9.4.14.v20181114</jettymavenplugin_version>
    <jfinaljetty.version>2019.1</jfinaljetty.version>
	<druid.version>1.0.29</druid.version>
	<mysql.version>5.1.46</mysql.version>
	<commonscodec.version>1.11</commonscodec.version>
	<commonsfileupload.version>1.3.3</commonsfileupload.version>
	<commonsio.version>2.6</commonsio.version>
	<commonslang.version>3.7</commonslang.version>
	<commonslogging.version>1.2</commonslogging.version>
	<commonsbeanutils.version>1.9.3</commonsbeanutils.version>
	<commonscollections.version>4.2</commonscollections.version>
	<commonspool2.version>2.6.0</commonspool2.version>
	<jedis.version>2.9.0</jedis.version>
	<fst.version>2.57</fst.version>
   </properties>
  
  <!-- 使用阿里 maven 库 -->
	<repositories>
		<repository>
			<id>ali-maven</id>
			<url>http://maven.aliyun.com/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
		</repository>
	</repositories>
	
    <dependencies>
       <dependency>
	      <groupId>junit</groupId>
	      <artifactId>junit</artifactId>
	      <version>${junit.version}</version>
	      <scope>test</scope>
	    </dependency>
	     <dependency>
	    	<groupId>com.jfinal</groupId>
	    	<artifactId>cos</artifactId>
	    	<version>${cos.version}</version>
	    </dependency>
	    <dependency>
		    <groupId>redis.clients</groupId>
		    <artifactId>jedis</artifactId>
		    <version>${jedis.version}</version>
	     </dependency>
	  <!--
	  <dependency>  
        <groupId>org.apache.logging.log4j</groupId>  
        <artifactId>log4j-api</artifactId>  
        <version>${apachelog4j.version}</version>  
    </dependency>  
    <dependency>  
        <groupId>org.apache.logging.log4j</groupId>  
        <artifactId>log4j-core</artifactId>  
        <version>${apachelog4j.version}</version>  
    </dependency>  
    -->
    <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
	 <dependency>
	    <groupId>com.jfinal</groupId>
	    <artifactId>jetty-server</artifactId>
	    <version>${jfinaljetty.version}</version>
	    <!--
			打 war 包时需要改成 provided，以免将一些无用的 jar 打进去
			为支持 IDEA 下启动项目 此处的 scope 值可以改为 compile 
		-->
	    <scope>provided</scope>
	 </dependency>



	<dependency>
	    <groupId>com.alibaba</groupId>
	    <artifactId>druid</artifactId>
	    <version>${druid.version}</version>
	</dependency>

	<dependency>
	    <groupId>mysql</groupId>
	    <artifactId>mysql-connector-java</artifactId>
	    <version>${mysql.version}</version>
	</dependency>

	<dependency>
	    <groupId>de.ruedigermoeller</groupId>
	    <artifactId>fst</artifactId>
	    <version>${fst.version}</version>
	</dependency>
 



<!--自选库-->
	 <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commonscodec.version}</version>
     </dependency>
	<dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>${commonsfileupload.version}</version>
    </dependency>
	<dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commonsio.version}</version>
    </dependency>
	<dependency>
	    <groupId>org.apache.commons</groupId>
	    <artifactId>commons-lang3</artifactId>
	    <version>${commonslang.version}</version>
	</dependency>
	<dependency>
	    <groupId>commons-logging</groupId>
	    <artifactId>commons-logging</artifactId>
	    <version>${commonslogging.version}</version>
	</dependency>
	<dependency>
	    <groupId>commons-beanutils</groupId>
	    <artifactId>commons-beanutils</artifactId>
	    <version>${commonsbeanutils.version}</version>
	</dependency>
	<dependency>
	    <groupId>org.apache.commons</groupId>
	    <artifactId>commons-collections4</artifactId>
	    <version>${commonscollections.version}</version>
	</dependency>
	<dependency>
	   <groupId>org.apache.commons</groupId>
	    <artifactId>commons-pool2</artifactId>
	    <version>${commonspool2.version}</version>
	</dependency>



	 <dependency>
	    <groupId>com.jfinal</groupId>
	    <artifactId>jfinal</artifactId>
	    <version>${jfinal.version}</version>
	  </dependency>
	  
	     <!-- https://mvnrepository.com/artifact/dom4j/dom4j -->
		<dependency>
		    <groupId>dom4j</groupId>
		    <artifactId>dom4j</artifactId>
		    <version>1.6.1</version>
		</dependency>
		
		<!-- httpclient -->
		<dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.5</version>
        </dependency>
		<dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>4.5.5</version>
        </dependency>
		<dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>4.4.9</version>
        </dependency>
        
        <dependency>
             <groupId>net.sf.json-lib</groupId>
             <artifactId>json-lib</artifactId>
             <version>2.4</version>
             <classifier>jdk15</classifier>
        </dependency>
  </dependencies>
  
  
  <build>
    <finalName>kejin</finalName>
	    <plugins>
	     <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-war-plugin</artifactId>
	            <version>3.0.0</version>
	            <configuration>
	                <encoding>${project.build.sourceEncoding}</encoding>  
			        <warName>${project.artifactId}-${project.version}</warName>  
			        <webappDirectory>${project.build.directory}/${project.artifactId}</webappDirectory>  
	            </configuration>
	        </plugin>
    
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<!-- java8 保留参数名编译参数 -->
					<compilerArgument>-parameters</compilerArgument>
					<compilerArguments>
						<verbose />
					</compilerArguments>
				</configuration>
			</plugin>

			<!-- jar 包中的配置文件优先级高于 config 目录下的 "同名文件" 因此，打包时需要排除掉 jar 包中来自 src/main/resources 
				目录的 配置文件，否则部署时 config 目录中的同名配置文件不会生效 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<excludes>
						<exclude>*.txt</exclude>
						<exclude>*.xml</exclude>
						<exclude>*.properties</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- 使用 mvn clean package 打包 更多配置可参考官司方文档：http://maven.apache.org/plugins/maven-assembly-plugin/single-mojo.html -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>

						<configuration>
							<!-- 打包生成的文件名 -->
							<finalName>${project.artifactId}</finalName>
							<!-- jar 等压缩文件在被打包进入 zip、tar.gz 时是否压缩，设置为 false 可加快打包速度 -->
							<recompressZippedFiles>false</recompressZippedFiles>
							<!-- 打包生成的文件是否要追加 release.xml 中定义的 id 值 -->
							<appendAssemblyId>true</appendAssemblyId>
							<!-- 指向打包描述文件 package.xml -->
							<descriptors>
								<descriptor>package.xml</descriptor>
							</descriptors>
							<!-- 打包结果输出的基础目录 -->
							<outputDirectory>${project.build.directory}/</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		 
		   <!-- jetty:run 添加jetty插件以便启动 -->
		 <plugin>
		    <groupId>org.eclipse.jetty</groupId>
  			<artifactId>jetty-maven-plugin</artifactId>
		    <version>${jettymavenplugin_version}</version>
		    <configuration>
		        <stopKey>stop</stopKey>
		        <stopPort>5599</stopPort>
		        <webApp>
		        	<defaultsDescriptor>src/main/resources/webdefault.xml</defaultsDescriptor>
		            <contextPath>/</contextPath>
		        </webApp>
		        <scanIntervalSeconds>5</scanIntervalSeconds>
		        <httpConnector>
		        		<port>8080</port>
		        </httpConnector>
		    </configuration>
		  </plugin>
	  </plugins>
  </build>
</project>